# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    x = []
    i = 0
    def fibo(i):
        if i == 1:
            return 1
        elif i == 2:
            return 1
        else:
            # c = fibo(i - 2)
            # b = fibo(i - 1)
            a = fibo(i-1) + fibo(i-2)
            return a
    for i in range(n, m + 1):
        x.append(fibo(i))
    return x
print(fibonacci(7, 10))
print ('---' * 20)
# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(a):
    print(a)
    n = 1
    while n < len(a):
        for i in range(len(a)-n):
            if a[i] > a[i+1]:
                a[i], a[i+1] = a[i+1], a[i]
                print(a)
        n += 1
    return a
# print(sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))

print ('---' * 20)
# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.
 

def filter(b):
    k = []
    for i in b:
        if i > 0:
            k.append(i)
    return k

print(filter([2, 10, -12, 2.5, 20, -11, 4, 4, 0]))
# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

def paral(p1, p2, p3, p4):
    p1p3 = (p3[0] - p1[0]) ** 2 + (p3[1] - p1[1]) ** 2
    p2p4 = (p4[0] - p2[0]) ** 2 + (p4[1] - p2[1]) ** 2

    p1p2 = (p2[0] - p1[0]) ** 2 + (p2[1] - p1[1]) ** 2
    p2p3 = (p3[0] - p2[0]) ** 2 + (p3[1] - p2[1]) ** 2
    p3p4 = (p4[0] - p3[0]) ** 2 + (p4[1] - p3[1]) ** 2
    p1p4 = (p1[0] - p4[0]) ** 2 + (p1[1] - p4[1]) ** 2

    return p1p3 + p2p4 == p1p2 + p2p3 + p3p4 + p1p4

print(paral((0,0),(0,2),(3,2),(3,0)))
print(paral((0,1),(10,20),(11,21),(30,20)))
